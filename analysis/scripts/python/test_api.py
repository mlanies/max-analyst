#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API —Å–µ—Ä–≤–µ—Ä–∞
"""

import requests
import json
import time

def test_api():
    base_url = "http://localhost:5003"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–µ—Ä–≤–µ—Ä–∞...")
    print(f"üåê URL: {base_url}")
    print("-" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
    try:
        print("1. –¢–µ—Å—Ç /api/health...")
        response = requests.get(f"{base_url}/api/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ /api/health - OK")
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"‚ùå /api/health - –û—à–∏–±–∫–∞ {response.status_code}")
    except Exception as e:
        print(f"‚ùå /api/health - –û—à–∏–±–∫–∞: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 2: –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
    try:
        print("2. –¢–µ—Å—Ç /api/status...")
        response = requests.get(f"{base_url}/api/status", timeout=5)
        if response.status_code == 200:
            print("‚úÖ /api/status - OK")
            data = response.json()
            print(f"   –°—Ç–∞—Ç—É—Å: {data.get('status', 'N/A')}")
            print(f"   –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: {data.get('devices', [])}")
            print(f"   –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {data.get('app_package', 'N/A')}")
        else:
            print(f"‚ùå /api/status - –û—à–∏–±–∫–∞ {response.status_code}")
    except Exception as e:
        print(f"‚ùå /api/status - –û—à–∏–±–∫–∞: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 3: –ú–µ—Ç—Ä–∏–∫–∏
    try:
        print("3. –¢–µ—Å—Ç /api/metrics...")
        response = requests.get(f"{base_url}/api/metrics", timeout=5)
        if response.status_code == 200:
            print("‚úÖ /api/metrics - OK")
            data = response.json()
            print(f"   CPU: {data.get('cpu_usage', 'N/A')}%")
            print(f"   RAM: {data.get('total_ram', 'N/A')}K")
            print(f"   –°–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {data.get('network_connections', 'N/A')}")
        else:
            print(f"‚ùå /api/metrics - –û—à–∏–±–∫–∞ {response.status_code}")
    except Exception as e:
        print(f"‚ùå /api/metrics - –û—à–∏–±–∫–∞: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 4: –õ–æ–≥–∏
    try:
        print("4. –¢–µ—Å—Ç /api/logs...")
        response = requests.get(f"{base_url}/api/logs", timeout=5)
        if response.status_code == 200:
            print("‚úÖ /api/logs - OK")
            logs = response.json()
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≥–æ–≤: {len(logs)}")
            if logs:
                print(f"   –ü–æ—Å–ª–µ–¥–Ω–∏–π –ª–æ–≥: {logs[0].get('message', 'N/A')[:50]}...")
        else:
            print(f"‚ùå /api/logs - –û—à–∏–±–∫–∞ {response.status_code}")
    except Exception as e:
        print(f"‚ùå /api/logs - –û—à–∏–±–∫–∞: {e}")
    
    print()
    print("-" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_api()
