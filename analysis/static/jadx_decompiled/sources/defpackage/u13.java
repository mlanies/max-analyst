package defpackage;

import java.util.LinkedHashMap;

/* loaded from: classes.dex */
public final class u13 {
    public static final fs4 b;
    public static final LinkedHashMap c;
    public static final u13 d;
    public static final u13 e;
    public static final u13 f;
    public static final u13 g;
    public static final u13 h;
    public static final u13 i;
    public static final u13 j;
    public static final u13 k;
    public static final u13 l;
    public static final u13 m;
    public static final u13 n;
    public static final u13 o;
    public static final u13 p;
    public static final u13 q;
    public static final u13 r;
    public static final u13 s;
    public static final qq9 t;
    public final String a;

    static {
        qq9 qq9Var = new qq9();
        t = qq9Var;
        b = new fs4(16);
        c = new LinkedHashMap();
        qq9.a(qq9Var, "SSL_RSA_WITH_NULL_MD5");
        qq9.a(qq9Var, "SSL_RSA_WITH_NULL_SHA");
        qq9.a(qq9Var, "SSL_RSA_EXPORT_WITH_RC4_40_MD5");
        qq9.a(qq9Var, "SSL_RSA_WITH_RC4_128_MD5");
        qq9.a(qq9Var, "SSL_RSA_WITH_RC4_128_SHA");
        qq9.a(qq9Var, "SSL_RSA_EXPORT_WITH_DES40_CBC_SHA");
        qq9.a(qq9Var, "SSL_RSA_WITH_DES_CBC_SHA");
        d = qq9.a(qq9Var, "SSL_RSA_WITH_3DES_EDE_CBC_SHA");
        qq9.a(qq9Var, "SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA");
        qq9.a(qq9Var, "SSL_DHE_DSS_WITH_DES_CBC_SHA");
        qq9.a(qq9Var, "SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA");
        qq9.a(qq9Var, "SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA");
        qq9.a(qq9Var, "SSL_DHE_RSA_WITH_DES_CBC_SHA");
        qq9.a(qq9Var, "SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA");
        qq9.a(qq9Var, "SSL_DH_anon_EXPORT_WITH_RC4_40_MD5");
        qq9.a(qq9Var, "SSL_DH_anon_WITH_RC4_128_MD5");
        qq9.a(qq9Var, "SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA");
        qq9.a(qq9Var, "SSL_DH_anon_WITH_DES_CBC_SHA");
        qq9.a(qq9Var, "SSL_DH_anon_WITH_3DES_EDE_CBC_SHA");
        qq9.a(qq9Var, "TLS_KRB5_WITH_DES_CBC_SHA");
        qq9.a(qq9Var, "TLS_KRB5_WITH_3DES_EDE_CBC_SHA");
        qq9.a(qq9Var, "TLS_KRB5_WITH_RC4_128_SHA");
        qq9.a(qq9Var, "TLS_KRB5_WITH_DES_CBC_MD5");
        qq9.a(qq9Var, "TLS_KRB5_WITH_3DES_EDE_CBC_MD5");
        qq9.a(qq9Var, "TLS_KRB5_WITH_RC4_128_MD5");
        qq9.a(qq9Var, "TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA");
        qq9.a(qq9Var, "TLS_KRB5_EXPORT_WITH_RC4_40_SHA");
        qq9.a(qq9Var, "TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5");
        qq9.a(qq9Var, "TLS_KRB5_EXPORT_WITH_RC4_40_MD5");
        e = qq9.a(qq9Var, "TLS_RSA_WITH_AES_128_CBC_SHA");
        qq9.a(qq9Var, "TLS_DHE_DSS_WITH_AES_128_CBC_SHA");
        qq9.a(qq9Var, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA");
        qq9.a(qq9Var, "TLS_DH_anon_WITH_AES_128_CBC_SHA");
        f = qq9.a(qq9Var, "TLS_RSA_WITH_AES_256_CBC_SHA");
        qq9.a(qq9Var, "TLS_DHE_DSS_WITH_AES_256_CBC_SHA");
        qq9.a(qq9Var, "TLS_DHE_RSA_WITH_AES_256_CBC_SHA");
        qq9.a(qq9Var, "TLS_DH_anon_WITH_AES_256_CBC_SHA");
        qq9.a(qq9Var, "TLS_RSA_WITH_NULL_SHA256");
        qq9.a(qq9Var, "TLS_RSA_WITH_AES_128_CBC_SHA256");
        qq9.a(qq9Var, "TLS_RSA_WITH_AES_256_CBC_SHA256");
        qq9.a(qq9Var, "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256");
        qq9.a(qq9Var, "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA");
        qq9.a(qq9Var, "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA");
        qq9.a(qq9Var, "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA");
        qq9.a(qq9Var, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256");
        qq9.a(qq9Var, "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256");
        qq9.a(qq9Var, "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256");
        qq9.a(qq9Var, "TLS_DH_anon_WITH_AES_128_CBC_SHA256");
        qq9.a(qq9Var, "TLS_DH_anon_WITH_AES_256_CBC_SHA256");
        qq9.a(qq9Var, "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA");
        qq9.a(qq9Var, "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA");
        qq9.a(qq9Var, "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA");
        qq9.a(qq9Var, "TLS_PSK_WITH_RC4_128_SHA");
        qq9.a(qq9Var, "TLS_PSK_WITH_3DES_EDE_CBC_SHA");
        qq9.a(qq9Var, "TLS_PSK_WITH_AES_128_CBC_SHA");
        qq9.a(qq9Var, "TLS_PSK_WITH_AES_256_CBC_SHA");
        qq9.a(qq9Var, "TLS_RSA_WITH_SEED_CBC_SHA");
        g = qq9.a(qq9Var, "TLS_RSA_WITH_AES_128_GCM_SHA256");
        h = qq9.a(qq9Var, "TLS_RSA_WITH_AES_256_GCM_SHA384");
        qq9.a(qq9Var, "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256");
        qq9.a(qq9Var, "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384");
        qq9.a(qq9Var, "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256");
        qq9.a(qq9Var, "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384");
        qq9.a(qq9Var, "TLS_DH_anon_WITH_AES_128_GCM_SHA256");
        qq9.a(qq9Var, "TLS_DH_anon_WITH_AES_256_GCM_SHA384");
        qq9.a(qq9Var, "TLS_EMPTY_RENEGOTIATION_INFO_SCSV");
        qq9.a(qq9Var, "TLS_FALLBACK_SCSV");
        qq9.a(qq9Var, "TLS_ECDH_ECDSA_WITH_NULL_SHA");
        qq9.a(qq9Var, "TLS_ECDH_ECDSA_WITH_RC4_128_SHA");
        qq9.a(qq9Var, "TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDHE_ECDSA_WITH_NULL_SHA");
        qq9.a(qq9Var, "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA");
        qq9.a(qq9Var, "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDH_RSA_WITH_NULL_SHA");
        qq9.a(qq9Var, "TLS_ECDH_RSA_WITH_RC4_128_SHA");
        qq9.a(qq9Var, "TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDHE_RSA_WITH_NULL_SHA");
        qq9.a(qq9Var, "TLS_ECDHE_RSA_WITH_RC4_128_SHA");
        qq9.a(qq9Var, "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA");
        i = qq9.a(qq9Var, "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA");
        j = qq9.a(qq9Var, "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDH_anon_WITH_NULL_SHA");
        qq9.a(qq9Var, "TLS_ECDH_anon_WITH_RC4_128_SHA");
        qq9.a(qq9Var, "TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDH_anon_WITH_AES_128_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDH_anon_WITH_AES_256_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256");
        qq9.a(qq9Var, "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384");
        qq9.a(qq9Var, "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256");
        qq9.a(qq9Var, "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384");
        qq9.a(qq9Var, "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256");
        qq9.a(qq9Var, "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384");
        qq9.a(qq9Var, "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256");
        qq9.a(qq9Var, "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384");
        k = qq9.a(qq9Var, "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256");
        l = qq9.a(qq9Var, "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384");
        qq9.a(qq9Var, "TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256");
        qq9.a(qq9Var, "TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384");
        m = qq9.a(qq9Var, "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256");
        n = qq9.a(qq9Var, "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384");
        qq9.a(qq9Var, "TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256");
        qq9.a(qq9Var, "TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384");
        qq9.a(qq9Var, "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA");
        qq9.a(qq9Var, "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA");
        o = qq9.a(qq9Var, "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256");
        p = qq9.a(qq9Var, "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256");
        qq9.a(qq9Var, "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256");
        qq9.a(qq9Var, "TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256");
        q = qq9.a(qq9Var, "TLS_AES_128_GCM_SHA256");
        r = qq9.a(qq9Var, "TLS_AES_256_GCM_SHA384");
        s = qq9.a(qq9Var, "TLS_CHACHA20_POLY1305_SHA256");
        qq9.a(qq9Var, "TLS_AES_128_CCM_SHA256");
        qq9.a(qq9Var, "TLS_AES_128_CCM_8_SHA256");
    }

    public u13(String str) {
        this.a = str;
    }

    public final String toString() {
        return this.a;
    }
}
